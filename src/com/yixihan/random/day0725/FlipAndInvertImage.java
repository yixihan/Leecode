package com.yixihan.random.day0725;

/**
 * 给定一个 n x n 的二进制矩阵 image ，先 水平 翻转图像，然后 反转 图像并返回 结果 。
 * <p>
 * 水平翻转图片就是将图片的每一行都进行翻转，即逆序。
 * <p>
 * 例如，水平翻转 [1,1,0] 的结果是 [0,1,1]。
 * 反转图片的意思是图片中的 0 全部被 1 替换， 1 全部被 0 替换。
 * <p>
 * 例如，反转 [0,1,1] 的结果是 [1,0,0]。
 * <p>
 * 输入：image = [[1,1,0],[1,0,1],[0,0,0]]
 * 输出：[[1,0,0],[0,1,0],[1,1,1]]
 * 解释：首先翻转每一行: [[0,1,1],[1,0,1],[0,0,0]]；
 * 然后反转图片: [[1,0,0],[0,1,0],[1,1,1]]
 * <p>
 * 输入：image = [[1,1,0,0],[1,0,0,1],[0,1,1,1],[1,0,1,0]]
 * 输出：[[1,1,0,0],[0,1,1,0],[0,0,0,1],[1,0,1,0]]
 * 解释：首先翻转每一行: [[0,0,1,1],[1,0,0,1],[1,1,1,0],[0,1,0,1]]；
 * 然后反转图片: [[1,1,0,0],[0,1,1,0],[0,0,0,1],[1,0,1,0]]
 *
 * @author : yixihan
 * @create : 2022-07-25-9:48
 */
public class FlipAndInvertImage {

    public int[][] flipAndInvertImage(int[][] image) {
        int n = image.length;
        int m = image[0].length;

        for (int i = 0; i < n; i++) {
            for (int l = 0, r = m - 1; l <= r; l++, r--) {
                // 反转
                int tmp = image[i][l];
                image[i][l] = image[i][r];
                image[i][r] = tmp;

                // 反转
                image[i][l] = image[i][l] == 1 ? 0 : 1;
                if (l != r) {
                    image[i][r] = image[i][r] == 1 ? 0 : 1;
                }
            }
        }

        return image;
    }
}
